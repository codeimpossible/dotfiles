[core]
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
    # never have this set to true unless you're on windows
    autocrlf=true
	  editor = vim
	excludesfile = ~/.gitignore_global
[user]
	name = Jared Barboza
	email = jared.m.barboza@gmail.com
[color]
    ui = true
[color "diff"]
    whitespace = red reverse
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[alias]
    cd = !"git-cd"
    rt = !renameTag
    st = status
    ci = commit
    br = branch
    co = checkout
    df = diff
    dc = diff --cached
    amend = commit --amend
    dc = diff --cached
    graph = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
    graph2 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
    lg = !"git graph"
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = ls-files

    pom = push origin master
# Divergence (commits we added and commits remote added)
    div = divergence

# Goodness (summary of diff lines added/removed/total)
    gn = goodness
    gnc = goodness --cached

# Fancy logging.
#   h = head
#   hp = head with patch
#   r = recent commits, only current branch
#   ra = recent commits, all reachable refs
#   l = all commits, only current branch
#   la = all commits, all reachable refs
    head = !git l -1
    h = !git head
    hp = "!. ~/.githelpers && show_git_head"
    r = !git l -30
    ra = !git r --all
    l = "!. ~/.githelpers && pretty_git_log"
    la = !git l --all

# Show files ignored by git:
    ign = ls-files -o -i --exclude-standard
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
